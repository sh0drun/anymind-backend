scalar UUID

input PayInput {
    customerId: String!
    price: Float!
    paymentMethod: String!
    additionalItems: AdditionalItemsInput
}

input AdditionalItemsInput {
    last4: String
    courier: String
    bank: String
    accountNumber: String
    chequeNumber: String
}

type PayResult {
    paymentId: UUID!
    finalPrice: Float!
    points: Int!
}

type SalesByHour {
    datetime: String!
    sales: Float!
    points: Int!
}

input SalesQueryInput {
    startDateTime: String!
    endDateTime: String!
}

type Query {
    sales(input: SalesQueryInput!): [SalesByHour!]!
}

type Mutation {
    pay(input: PayInput!): PayResult
}